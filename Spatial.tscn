[gd_scene load_steps=8 format=2]

[ext_resource path="res://Lines.gd" type="Script" id=1]
[ext_resource path="res://ImmediateGeometry.gd" type="Script" id=2]
[ext_resource path="res://Boat.gd" type="Script" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
//render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform vec4 deep_sea : hint_color = vec4(0.1, 0.3, 0.4, 1.0);
uniform vec4 high_sea : hint_color = vec4(0.1, 0.3, 0.4, 1.0);

varying flat vec3 out_color;

uniform int vert = 0;

vec3 lerp_color(vec4 a, vec4 b, float t) {
	float rr = a.r + (b.r - a.r) * t;
	float gg = a.g + (b.g - a.g) * t;
	float bb = a.b + (b.b - a.b) * t;
	return vec3(rr, gg, bb);
}


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	
	//out_color = vec3(deep_sea.r, deep_sea.g, deep_sea.b);
	
	
	
	out_color = lerp_color(deep_sea, high_sea, clamp((VERTEX.y + 2.0) / 5.0, 0.0, 1.0));
	//vert = vert + 1;
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = out_color * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 0.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/deep_sea = Color( 0.1, 0.3, 0.4, 1 )
shader_param/high_sea = Color( 0.568627, 0.666667, 0.713726, 1 )
shader_param/vert = 0

[sub_resource type="OpenSimplexNoise" id=3]
seed = 1
octaves = 6
period = 20.9
persistence = 0.553
lacunarity = 2.05

[sub_resource type="CubeMesh" id=4]

[node name="Spatial" type="Spatial"]

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.707107, -0.541675, 0.454519, 0, 0.642787, 0.766045, -0.707107, -0.541675, 0.454519, 12, 21.964, 18.8004 )

[node name="Sea" type="ImmediateGeometry" parent="."]
material_override = SubResource( 2 )
script = ExtResource( 2 )
noise = SubResource( 3 )

[node name="Lines" type="ImmediateGeometry" parent="."]
visible = false
script = ExtResource( 1 )

[node name="Boat" type="Spatial" parent="."]
transform = Transform( 0.5, 0, 0, 0, 0.5, 0, 0, 0, 0.5, 0, 0, 0 )
script = ExtResource( 3 )
__meta__ = {
"_edit_group_": true
}

[node name="BoatMesh" type="MeshInstance" parent="Boat"]
mesh = SubResource( 4 )
material/0 = null

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 10.8146, 14.562, 0 )
